{
   "id": "init-post",
   "title": "First Post... bringing justpuffy.dev to life",
   "date": "2025-08-04",
   "compiledMDX": {
      "compiledSource": "\"use strict\";\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = {\n    br: \"br\",\n    em: \"em\",\n    li: \"li\",\n    p: \"p\",\n    strong: \"strong\",\n    ul: \"ul\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"\\\"Blog will be simple,\\\" I said.\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"\\\"You are an experienced engineer, it's just web stuff,\\\" I said.\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.em, {\n        children: _jsx(_components.strong, {\n          children: \"\\\"Oh no,\\\"\"\n        })\n      }), \" \", _jsx(_components.strong, {\n        children: \"I said.\"\n      })]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Well, I was kinda right in the end.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Welcome to my blog. I don't really have a particular goal in mind yet for it, I just know that I wanted to do it. I\", _jsx(_components.br, {}), \"\\n\", \"think I told myself a few times that I wouldn't go too deep — that this is just to understand full stack memes... (\", _jsxs(_components.em, {\n        children: [\"I\", _jsx(_components.br, {}), \"\\n\", \"still don't understand full stack memes\"]\n      }), \")...\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"…the truth is I feel horribly incompetent all the time. I’m self-taught, I didn’t finish my degree (for various reasons,\", _jsx(_components.br, {}), \"\\n\", \"maybe that’ll be a later post), and I feel like I’m constantly the dumbest one in the room when I’m around other\", _jsx(_components.br, {}), \"\\n\", \"engineers. The only salve I've found over the years for this constant feeling of ‘not enough’ is to keep learning; to\", _jsx(_components.br, {}), \"\\n\", \"keep feeding the endless starvation for knowledge. I don't know many other people like me, but I’d like to. So here we\", _jsx(_components.br, {}), \"\\n\", \"are.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"So what even \", _jsx(_components.em, {\n        children: \"is\"\n      }), \" this blog?\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Well, in the future? Maybe something interesting to me as a complete full stack project. For now? This is what I’ve done\", _jsx(_components.br, {}), \"\\n\", \"so far:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Secured a domain name\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Created an empty Next.js app\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Deployed it with Vercel\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Started with post loading\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Realized through searching that people generally use CMS to handle post loading\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"“Im way too cool for that”\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Implement post loading\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Implement post metadata caching, hashing posts to force regeneration on edit\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Implement byte limited infinite scroll based on cached post sizes\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Learn the difference between normal .ts scripts and react components\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Brain boom at generative html (i did like 2 months of web stuff pre-angular days for a very small, not very hip,\", _jsx(_components.br, {}), \"\\n\", \"company)\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Start componentizing everything like you would do with gamedev\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Figure out how to use tailwind\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Struggle with tailwind\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Continue to have fun?... after getting tailwind to work\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Right now this isn't much, and I'm sure any experienced fullstack could’ve done this in an hour, instead of a weekend.\", _jsx(_components.br, {}), \"\\n\", \"But y’know? It was fun. It was a nice escape from the c++ system work I’m used to - it lets me keep learning. For a bit,\", _jsx(_components.br, {}), \"\\n\", \"that starvation is a little more bearable. I’ll most likely catalog a bit of the process here in following posts, and as\", _jsx(_components.br, {}), \"\\n\", \"I go, when I feel like I’m missing a feature, I’ll try to support it. Maybe in the end I’ll have my first ever open\", _jsx(_components.br, {}), \"\\n\", \"source library CMS to give to the world.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Thanks for coming.\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n",
      "frontmatter": {},
      "scope": {}
   }
}